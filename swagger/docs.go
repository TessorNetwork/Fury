// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package swagger

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "developers@tessor.network"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/approvedPowerUpRequests": {
            "get": {
                "description": "This endpoint returns the user Did power up approved requests, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/id"
                ],
                "summary": "Get the user Did power up approved requests",
                "operationId": "id_resolveApprovedPowerUpRequests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DidPowerUpRequest"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furykyc/funds": {
            "get": {
                "description": "This endpoint returns current pool funds for accreditation block reward",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furykyc"
                ],
                "summary": "Get All Current pool funds",
                "operationId": "getGetPoolFunds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Coin"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furykyc/invites": {
            "get": {
                "description": "This endpoint returns all the Invites",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furykyc"
                ],
                "summary": "Get All Invites",
                "operationId": "getInvitesHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/types.Invite"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furykyc/membership/{address}": {
            "get": {
                "description": "This endpoint returns the Membership",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furykyc"
                ],
                "summary": "Get Membership for given address",
                "operationId": "getMembershipForAddr",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.Membership"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furykyc/memberships": {
            "get": {
                "description": "This endpoint returns all the Memberships",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furykyc"
                ],
                "summary": "Get All Memberships",
                "operationId": "getMemberships",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Membership"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furykyc/sold/{address}": {
            "get": {
                "description": "This endpoint returns all Memberships sold by a specific Trusted Service Provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furykyc"
                ],
                "summary": "Get All Memberships sold by Trusted Service Provider",
                "operationId": "getSoldForTsp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the tsp which to read the sold memberhip",
                        "name": "did",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Membership"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furykyc/tsps": {
            "get": {
                "description": "This endpoint returns all the Trusted Service Providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furykyc"
                ],
                "summary": "Get All Trusted Service Providers",
                "operationId": "getTrustedServiceProvidersHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "description": "Invited user",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furymint/etps": {
            "get": {
                "description": "This endpoint returns the Conversion rate, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furymint"
                ],
                "summary": "Get Conversion rate",
                "operationId": "getConversionRateHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.Dec"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/furymint/etps/{address}": {
            "get": {
                "description": "This endpoint returns the Exchange Trade Position, along with the blocktime at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/furymint"
                ],
                "summary": "Get all the Exchange Trade Positions for user",
                "operationId": "getEtpsHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Position"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/docs/metadataSchemes": {
            "get": {
                "description": "This endpoint returns the supported metadata schemes, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/documents"
                ],
                "summary": "Get the metadata schemes",
                "operationId": "getSupportedMetadataSchemesHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.MetadataSchema"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/docs/metadataSchemes/proposers": {
            "get": {
                "description": "This endpoint returns the trusted metadata proposers, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/documents"
                ],
                "summary": "Get the metadata proposers",
                "operationId": "getTrustedMetadataSchemesProposersHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/docs/{address}/received": {
            "get": {
                "description": "This endpoint returns the received documents, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/documents"
                ],
                "summary": "Get the received documents",
                "operationId": "getReceivedDocumentsHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Document"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/docs/{address}/sent": {
            "get": {
                "description": "This endpoint returns the sent documents, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/documents"
                ],
                "summary": "Get the sent documents",
                "operationId": "getSentDocumentsHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Document"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/government/address": {
            "get": {
                "description": "This endpoint returns the address that the government has currently, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/government"
                ],
                "summary": "Get the government address",
                "operationId": "government_address",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/government/tumbler": {
            "get": {
                "description": "This endpoint returns the address that the tumbler has currently, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/government"
                ],
                "summary": "Get the tumbler address",
                "operationId": "government_tumbler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/identities/{did}": {
            "get": {
                "description": "This endpoint returns a user Did Document, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/id"
                ],
                "summary": "Get a user Did Document",
                "operationId": "id_resolveIdentityHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user for which to read the Did Document",
                        "name": "did",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/keeper.ResolveIdentityResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/pendingPowerUpRequests": {
            "get": {
                "description": "This endpoint returns the user Did power up pending requests, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/id"
                ],
                "summary": "Get the user Did power up pending requests",
                "operationId": "id_resolvePendingPowerUpRequests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DidPowerUpRequest"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/powerUpRequest/{id}": {
            "get": {
                "description": "This endpoint returns a user Did power up request, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/id"
                ],
                "summary": "Get a user Did power up request",
                "operationId": "id_resolvePowerUpRequest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.DidPowerUpRequest"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/receipts/{address}/received": {
            "get": {
                "description": "This endpoint returns the received receipts, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/documents"
                ],
                "summary": "Get the received receipts",
                "operationId": "getReceivedDocumentsReceiptsHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DocumentReceipt"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/receipts/{address}/sent": {
            "get": {
                "description": "This endpoint returns the sent receipts, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/documents"
                ],
                "summary": "Get the sent receipts",
                "operationId": "getSentDocumentsReceiptsHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DocumentReceipt"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/rejectedPowerUpRequests": {
            "get": {
                "description": "This endpoint returns the user Did power up rejected requests, along with the height at which the resource was queried at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/id"
                ],
                "summary": "Get the user Did power up rejected power up requests",
                "operationId": "id_resolveRejectedPowerUpRequests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DidPowerUpRequest"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        },
        "/vbr/funds": {
            "get": {
                "description": "This endpoint returns current pool funds for validator block reward",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "x/vbr"
                ],
                "summary": "Get All Current VBR pool funds",
                "operationId": "getRetrieveBlockRewardsPoolFunds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/x.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DecCoin"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {}
                }
            }
        }
    },
    "definitions": {
        "keeper.ResolveIdentityResponse": {
            "type": "object",
            "properties": {
                "did_document": {
                    "$ref": "#/definitions/types.DidDocument"
                },
                "owner": {
                    "type": "string",
                    "example": "did:fury:12p24st9asf394jv04e8sxrl9c384jjqwejv0gf"
                }
            }
        },
        "types.Coin": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "To allow the use of unsigned integers (see: #1273) a larger refactor will\nneed to be made. So we use signed integers for now with safety measures in\nplace preventing negative values being used.",
                    "$ref": "#/definitions/types.Int"
                },
                "denom": {
                    "type": "string"
                }
            }
        },
        "types.Dec": {
            "type": "object"
        },
        "types.DecCoin": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Dec"
                },
                "denom": {
                    "type": "string"
                }
            }
        },
        "types.DidDocument": {
            "type": "object",
            "properties": {
                "@context": {
                    "type": "string",
                    "example": "https://www.w3.org/ns/did/v1"
                },
                "id": {
                    "type": "string",
                    "example": "did:fury:12p24st9asf394jv04e8sxrl9c384jjqwejv0gf"
                },
                "proof": {
                    "description": "Proof is **NOT** optional, we need it to have omitempty/pointer to make the signature procedure more straightforward,\ni.e. DidDocument.Validate() will check if proof is empty, and throw an error if true.",
                    "$ref": "#/definitions/types.Proof"
                },
                "publicKey": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PubKey"
                    }
                },
                "service": {
                    "description": "Services are optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Service"
                    }
                }
            }
        },
        "types.DidPowerUpRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Coin"
                    }
                },
                "claimant": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "d423c645-fd50-4841-8138-192ee8e23dde"
                },
                "proof": {
                    "type": "string",
                    "example": "S5hyg4slMxm9fK8PTNDs8tHmQcBfWXG0vqrNHLXY5K1qUz3QwZYjR9nzJoNDJh18aPsXper7rNBbyZPOm5K//x8Bqm2EJkdnHd7woa5eFqpziGaHxqvgPaLGspH47tnVilARTeF23L2NVHWcEWuo9U5cWg52l1lOixOG+DehT3vC9KjLqg0YqBoL2u0LTLqQMON4UUjC8JwzT/RMs30OYGsWuLc9s48RtJCQJZ+yAg3U6jZn3OokGwWWjYxF9tAsMR48KilHsPigsa9WPnaAyCMSJ05hOqjBxWiSHYiH1nAefFqHtNFXhJF3LRUCJ2xnSHxJC5Ndj4HFzUjyK4aiV1mtRlRcsqmXU80HEk7IzI74HYpW74F8LzXNsh8Pbl7HXoIzEiOHB5XStFnrxkIL3sYAJGH/pGbX3SxeyfoZhY4ikEyqX3OB7Pat2yHh/63XSPThRVpD7g0gy5N2aKBz3vrHCPhe3QQTzWmKlJOcg1FE5ZtSUEHdVQbm1GD9zP6KZDfbekh9+xU0EFczW9JF/we61LTvMF1KoxaBpL46O/J6ROEOQsb03hLEMadBKxZ+XaqAHiQWKu6G5YH2opNTGKcvSyNfDInOvAygUOfzLgTCWp7JOU09hWBKW1ya2yJNJMZ6q9giEAlqS/qqYy4gAqZKjt7nF0siOb3Vz6zEaXdhCcqrfnNN6n/kFXWz24yAucW+/EHt+hsygEVUZQ=="
                },
                "proof_key": {
                    "type": "string",
                    "example": "L0QIWxtHeWeUQhmfWqB2n+MZXFqEYctltilM0j69tBd1drUoUSz/vUkaPadQAdKqtQOD43Py7/JZt5IFyx7iDdphzJEX7bqq+B6nC2DQUeISEiXwtDmJYMp20/N23DY2T7L/Z/dzbxRZDWoUhtr9fRPeJL8NHtPqU9YZw2f1tgMk2t/ZMKtBhYzO5BnF8Crmshjw6b6KA3fK+j7YrmF8fVpVFCdz5jd7cprf5RIqwVjt4w1cYZWeKvGLWeGVX3oiCB67EzXZVUCsD03evr90GDY9qGLfUaWJdBkNjByDotLY0OhrKpcZ+O0IZyZv1+YKx7ZDoPAsEJqpqw4M9bGQRg=="
                },
                "status": {
                    "$ref": "#/definitions/types.RequestStatus"
                }
            }
        },
        "types.Document": {
            "type": "object",
            "properties": {
                "checksum": {
                    "description": "Optional",
                    "$ref": "#/definitions/types.DocumentChecksum"
                },
                "content_uri": {
                    "description": "Optional",
                    "type": "string"
                },
                "do_sign": {
                    "description": "Optional",
                    "$ref": "#/definitions/types.DocumentDoSign"
                },
                "encryption_data": {
                    "description": "Optional",
                    "$ref": "#/definitions/types.DocumentEncryptionData"
                },
                "metadata": {
                    "$ref": "#/definitions/types.DocumentMetadata"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "did:fury:12p24st9asf394jv04e8sxrl9c384jjqwejv0gf"
                    ]
                },
                "sender": {
                    "type": "string",
                    "example": "did:fury:12p24st9asf394jv04e8sxrl9c384jjqwejv0gf"
                },
                "uuid": {
                    "type": "string",
                    "example": "d0f6c692-506f-4bd7-bdf4-f6693633d1da"
                }
            }
        },
        "types.DocumentChecksum": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "types.DocumentDoSign": {
            "type": "object",
            "properties": {
                "certificate_profile": {
                    "type": "string"
                },
                "sdn_data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signer_instance": {
                    "type": "string"
                },
                "storage_uri": {
                    "type": "string"
                },
                "vcr_id": {
                    "type": "string"
                }
            }
        },
        "types.DocumentEncryptionData": {
            "type": "object",
            "properties": {
                "encrypted_data": {
                    "description": "contains the list of data that have been encrypted",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keys": {
                    "description": "contains the keys used to encrypt the data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.DocumentEncryptionKey"
                    }
                }
            }
        },
        "types.DocumentEncryptionKey": {
            "type": "object",
            "properties": {
                "recipient": {
                    "description": "Recipient that should use this data",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {
                    "description": "Value of the key that should be used. This is encrypted with the recipient's public key",
                    "type": "string"
                }
            }
        },
        "types.DocumentMetadata": {
            "type": "object",
            "properties": {
                "content_uri": {
                    "type": "string"
                },
                "schema": {
                    "description": "Optional - Either this or schema_type must be defined",
                    "$ref": "#/definitions/types.DocumentMetadataSchema"
                },
                "schema_type": {
                    "description": "Optional - Either this or schema must be defined",
                    "type": "string"
                }
            }
        },
        "types.DocumentMetadataSchema": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "types.DocumentReceipt": {
            "type": "object",
            "properties": {
                "document_uuid": {
                    "type": "string"
                },
                "proof": {
                    "description": "Optional",
                    "type": "string"
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sender": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tx_hash": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "types.Int": {
            "type": "object"
        },
        "types.Invite": {
            "type": "object",
            "properties": {
                "sender": {
                    "description": "User that has sent the invitation",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sender_membership": {
                    "description": "Membership of Sender when the invite was created",
                    "type": "string"
                },
                "status": {
                    "description": "Tells if the invite is pending, rewarded or invalid",
                    "type": "integer"
                },
                "user": {
                    "description": "Invited user",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.Membership": {
            "type": "object",
            "properties": {
                "expiry_at": {
                    "description": "Block height at which the membership expired",
                    "type": "integer"
                },
                "membership_type": {
                    "type": "string"
                },
                "owner": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tsp_address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.MetadataSchema": {
            "type": "object",
            "properties": {
                "schema_uri": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "types.Position": {
            "type": "object",
            "properties": {
                "collateral": {
                    "$ref": "#/definitions/types.Int"
                },
                "created_at": {
                    "type": "string"
                },
                "credits": {
                    "$ref": "#/definitions/types.Coin"
                },
                "exchange_rate": {
                    "$ref": "#/definitions/types.Dec"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.Proof": {
            "type": "object",
            "properties": {
                "controller": {
                    "type": "string",
                    "example": "did:fury:1tkgm3rra9cs3sfugjqdps30ujggf5klm425zvx"
                },
                "created": {
                    "type": "string",
                    "example": "2020-04-22T04:23:50.73112321Z"
                },
                "proofPurpose": {
                    "type": "string",
                    "example": "authentication"
                },
                "signatureValue": {
                    "type": "string",
                    "example": "nIgRvObXlF2OIbktZcQJw0UU7zDEku8cEBq7194YOjhEvD5wBZ+TcNu9GNRZucC6OyuplHfK6uo57+3lVQbpgA=="
                },
                "type": {
                    "type": "string",
                    "example": "EcdsaSecp256k1VerificationKey2019"
                },
                "verificationMethod": {
                    "type": "string",
                    "example": "did:fury:pub1addwnpepqt6lnn5v0c3rys49v5v9f4kvcchehnu7kyk8t8vce5lsxfy7e2pxwyvmf6t"
                }
            }
        },
        "types.PubKey": {
            "type": "object",
            "properties": {
                "controller": {
                    "type": "string",
                    "example": "did:fury:12p24st9asf394jv04e8sxrl9c384jjqwejv0gf"
                },
                "id": {
                    "type": "string",
                    "example": "did:fury:1tkgm3rra9cs3sfugjqdps30ujggf5klm425zvx#keys-1"
                },
                "publicKeyPem": {
                    "type": "string",
                    "example": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvaM5rNKqd5sl1flSqRHg\nkKdGJzVcktZs0O1IO5A7TauzAtn0vRMr4moWYTn5nUCCiDFbTPoMyPp6tsaZScAD\nG9I7g4vK+/FcImcrdDdv9rjh1aGwkGK3AXUNEG+hkP+QsIBl5ORNSKn+EcdFmnUc\nzhNulA74zQ3xnz9cUtsPC464AWW0Yrlw40rJ/NmDYfepjYjikMVvJbKGzbN3Xwv7\nZzF4bPTi7giZlJuKbNUNTccPY/nPr5EkwZ5/cOZnAJGtmTtj0e0mrFTX8sMPyQx0\nO2uYM97z0SRkf8oeNQm+tyYbwGWY2TlCEXbvhP34xMaBTzWNF5+Z+FZi+UfPfVfK\nHQIDAQAB\n-----END PUBLIC KEY-----\n"
                },
                "type": {
                    "type": "string",
                    "example": "RsaVerificationKey2018"
                }
            }
        },
        "types.RequestStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.Service": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "serviceEndpoint": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "x.JSONResult": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "string",
                    "example": "1234"
                },
                "result": {
                    "type": "object"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "TessorNetwork API",
	Description: "Swagger API for TessorNetwork",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
