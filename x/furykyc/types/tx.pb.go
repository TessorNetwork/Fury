// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tessornetwork/furykyc/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgInviteUser struct {
	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Sender    string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgInviteUser) Reset()         { *m = MsgInviteUser{} }
func (m *MsgInviteUser) String() string { return proto.CompactTextString(m) }
func (*MsgInviteUser) ProtoMessage()    {}
func (*MsgInviteUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{0}
}
func (m *MsgInviteUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInviteUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInviteUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInviteUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteUser.Merge(m, src)
}
func (m *MsgInviteUser) XXX_Size() int {
	return m.Size()
}
func (m *MsgInviteUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteUser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteUser proto.InternalMessageInfo

func (m *MsgInviteUser) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgInviteUser) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

type MsgInviteUserResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgInviteUserResponse) Reset()         { *m = MsgInviteUserResponse{} }
func (m *MsgInviteUserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInviteUserResponse) ProtoMessage()    {}
func (*MsgInviteUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{1}
}
func (m *MsgInviteUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInviteUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInviteUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInviteUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteUserResponse.Merge(m, src)
}
func (m *MsgInviteUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInviteUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteUserResponse proto.InternalMessageInfo

func (m *MsgInviteUserResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// ==========================================
type MsgBuyMembership struct {
	MembershipType string `protobuf:"bytes,1,opt,name=membership_type,json=membershipType,proto3" json:"membership_type,omitempty"`
	Buyer          string `protobuf:"bytes,2,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Tsp            string `protobuf:"bytes,3,opt,name=tsp,proto3" json:"tsp,omitempty"`
}

func (m *MsgBuyMembership) Reset()         { *m = MsgBuyMembership{} }
func (m *MsgBuyMembership) String() string { return proto.CompactTextString(m) }
func (*MsgBuyMembership) ProtoMessage()    {}
func (*MsgBuyMembership) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{2}
}
func (m *MsgBuyMembership) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyMembership) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyMembership.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyMembership) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyMembership.Merge(m, src)
}
func (m *MsgBuyMembership) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyMembership) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyMembership.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyMembership proto.InternalMessageInfo

func (m *MsgBuyMembership) GetMembershipType() string {
	if m != nil {
		return m.MembershipType
	}
	return ""
}

func (m *MsgBuyMembership) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *MsgBuyMembership) GetTsp() string {
	if m != nil {
		return m.Tsp
	}
	return ""
}

type MsgBuyMembershipResponse struct {
	ExpiryAt string `protobuf:"bytes,1,opt,name=expiry_at,json=expiryAt,proto3" json:"expiry_at,omitempty"`
}

func (m *MsgBuyMembershipResponse) Reset()         { *m = MsgBuyMembershipResponse{} }
func (m *MsgBuyMembershipResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyMembershipResponse) ProtoMessage()    {}
func (*MsgBuyMembershipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{3}
}
func (m *MsgBuyMembershipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyMembershipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyMembershipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyMembershipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyMembershipResponse.Merge(m, src)
}
func (m *MsgBuyMembershipResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyMembershipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyMembershipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyMembershipResponse proto.InternalMessageInfo

func (m *MsgBuyMembershipResponse) GetExpiryAt() string {
	if m != nil {
		return m.ExpiryAt
	}
	return ""
}

// ==========================================
type MsgDepositIntoLiquidityPool struct {
	Depositor string                                   `protobuf:"bytes,1,opt,name=depositor,proto3" json:"depositor,omitempty"`
	Amount    github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

func (m *MsgDepositIntoLiquidityPool) Reset()         { *m = MsgDepositIntoLiquidityPool{} }
func (m *MsgDepositIntoLiquidityPool) String() string { return proto.CompactTextString(m) }
func (*MsgDepositIntoLiquidityPool) ProtoMessage()    {}
func (*MsgDepositIntoLiquidityPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{4}
}
func (m *MsgDepositIntoLiquidityPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDepositIntoLiquidityPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDepositIntoLiquidityPool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDepositIntoLiquidityPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDepositIntoLiquidityPool.Merge(m, src)
}
func (m *MsgDepositIntoLiquidityPool) XXX_Size() int {
	return m.Size()
}
func (m *MsgDepositIntoLiquidityPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDepositIntoLiquidityPool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDepositIntoLiquidityPool proto.InternalMessageInfo

func (m *MsgDepositIntoLiquidityPool) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *MsgDepositIntoLiquidityPool) GetAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Amount
	}
	return nil
}

type MsgDepositIntoLiquidityPoolResponse struct {
	AmountPool github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,1,rep,name=amount_pool,json=amountPool,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount_pool"`
}

func (m *MsgDepositIntoLiquidityPoolResponse) Reset()         { *m = MsgDepositIntoLiquidityPoolResponse{} }
func (m *MsgDepositIntoLiquidityPoolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDepositIntoLiquidityPoolResponse) ProtoMessage()    {}
func (*MsgDepositIntoLiquidityPoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{5}
}
func (m *MsgDepositIntoLiquidityPoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDepositIntoLiquidityPoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDepositIntoLiquidityPoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDepositIntoLiquidityPoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDepositIntoLiquidityPoolResponse.Merge(m, src)
}
func (m *MsgDepositIntoLiquidityPoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDepositIntoLiquidityPoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDepositIntoLiquidityPoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDepositIntoLiquidityPoolResponse proto.InternalMessageInfo

func (m *MsgDepositIntoLiquidityPoolResponse) GetAmountPool() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.AmountPool
	}
	return nil
}

// ==========================================
type MsgAddTsp struct {
	Tsp        string `protobuf:"bytes,1,opt,name=tsp,proto3" json:"tsp,omitempty"`
	Government string `protobuf:"bytes,2,opt,name=government,proto3" json:"government,omitempty"`
}

func (m *MsgAddTsp) Reset()         { *m = MsgAddTsp{} }
func (m *MsgAddTsp) String() string { return proto.CompactTextString(m) }
func (*MsgAddTsp) ProtoMessage()    {}
func (*MsgAddTsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{6}
}
func (m *MsgAddTsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddTsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddTsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddTsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddTsp.Merge(m, src)
}
func (m *MsgAddTsp) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddTsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddTsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddTsp proto.InternalMessageInfo

func (m *MsgAddTsp) GetTsp() string {
	if m != nil {
		return m.Tsp
	}
	return ""
}

func (m *MsgAddTsp) GetGovernment() string {
	if m != nil {
		return m.Government
	}
	return ""
}

type MsgAddTspResponse struct {
	Tsp string `protobuf:"bytes,1,opt,name=tsp,proto3" json:"tsp,omitempty"`
}

func (m *MsgAddTspResponse) Reset()         { *m = MsgAddTspResponse{} }
func (m *MsgAddTspResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddTspResponse) ProtoMessage()    {}
func (*MsgAddTspResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{7}
}
func (m *MsgAddTspResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddTspResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddTspResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddTspResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddTspResponse.Merge(m, src)
}
func (m *MsgAddTspResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddTspResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddTspResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddTspResponse proto.InternalMessageInfo

func (m *MsgAddTspResponse) GetTsp() string {
	if m != nil {
		return m.Tsp
	}
	return ""
}

// ==========================================
type MsgRemoveTsp struct {
	Tsp        string `protobuf:"bytes,1,opt,name=tsp,proto3" json:"tsp,omitempty"`
	Government string `protobuf:"bytes,2,opt,name=government,proto3" json:"government,omitempty"`
}

func (m *MsgRemoveTsp) Reset()         { *m = MsgRemoveTsp{} }
func (m *MsgRemoveTsp) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTsp) ProtoMessage()    {}
func (*MsgRemoveTsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{8}
}
func (m *MsgRemoveTsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTsp.Merge(m, src)
}
func (m *MsgRemoveTsp) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTsp proto.InternalMessageInfo

func (m *MsgRemoveTsp) GetTsp() string {
	if m != nil {
		return m.Tsp
	}
	return ""
}

func (m *MsgRemoveTsp) GetGovernment() string {
	if m != nil {
		return m.Government
	}
	return ""
}

type MsgRemoveTspResponse struct {
	Tsp string `protobuf:"bytes,1,opt,name=tsp,proto3" json:"tsp,omitempty"`
}

func (m *MsgRemoveTspResponse) Reset()         { *m = MsgRemoveTspResponse{} }
func (m *MsgRemoveTspResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTspResponse) ProtoMessage()    {}
func (*MsgRemoveTspResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{9}
}
func (m *MsgRemoveTspResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTspResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTspResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTspResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTspResponse.Merge(m, src)
}
func (m *MsgRemoveTspResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTspResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTspResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTspResponse proto.InternalMessageInfo

func (m *MsgRemoveTspResponse) GetTsp() string {
	if m != nil {
		return m.Tsp
	}
	return ""
}

// ==========================================
type MsgRemoveMembership struct {
	Government string `protobuf:"bytes,1,opt,name=government,proto3" json:"government,omitempty"`
	Subscriber string `protobuf:"bytes,2,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
}

func (m *MsgRemoveMembership) Reset()         { *m = MsgRemoveMembership{} }
func (m *MsgRemoveMembership) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMembership) ProtoMessage()    {}
func (*MsgRemoveMembership) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{10}
}
func (m *MsgRemoveMembership) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMembership) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMembership.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMembership) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMembership.Merge(m, src)
}
func (m *MsgRemoveMembership) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMembership) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMembership.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMembership proto.InternalMessageInfo

func (m *MsgRemoveMembership) GetGovernment() string {
	if m != nil {
		return m.Government
	}
	return ""
}

func (m *MsgRemoveMembership) GetSubscriber() string {
	if m != nil {
		return m.Subscriber
	}
	return ""
}

type MsgRemoveMembershipResponse struct {
	Subscriber string `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
}

func (m *MsgRemoveMembershipResponse) Reset()         { *m = MsgRemoveMembershipResponse{} }
func (m *MsgRemoveMembershipResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMembershipResponse) ProtoMessage()    {}
func (*MsgRemoveMembershipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{11}
}
func (m *MsgRemoveMembershipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMembershipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMembershipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMembershipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMembershipResponse.Merge(m, src)
}
func (m *MsgRemoveMembershipResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMembershipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMembershipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMembershipResponse proto.InternalMessageInfo

func (m *MsgRemoveMembershipResponse) GetSubscriber() string {
	if m != nil {
		return m.Subscriber
	}
	return ""
}

// ==========================================
type MsgSetMembership struct {
	Government    string `protobuf:"bytes,1,opt,name=government,proto3" json:"government,omitempty"`
	Subscriber    string `protobuf:"bytes,2,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	NewMembership string `protobuf:"bytes,3,opt,name=new_membership,json=newMembership,proto3" json:"new_membership,omitempty"`
}

func (m *MsgSetMembership) Reset()         { *m = MsgSetMembership{} }
func (m *MsgSetMembership) String() string { return proto.CompactTextString(m) }
func (*MsgSetMembership) ProtoMessage()    {}
func (*MsgSetMembership) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{12}
}
func (m *MsgSetMembership) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetMembership) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetMembership.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetMembership) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetMembership.Merge(m, src)
}
func (m *MsgSetMembership) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetMembership) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetMembership.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetMembership proto.InternalMessageInfo

func (m *MsgSetMembership) GetGovernment() string {
	if m != nil {
		return m.Government
	}
	return ""
}

func (m *MsgSetMembership) GetSubscriber() string {
	if m != nil {
		return m.Subscriber
	}
	return ""
}

func (m *MsgSetMembership) GetNewMembership() string {
	if m != nil {
		return m.NewMembership
	}
	return ""
}

type MsgSetMembershipResponse struct {
	ExpiryAt string `protobuf:"bytes,1,opt,name=expiry_at,json=expiryAt,proto3" json:"expiry_at,omitempty"`
}

func (m *MsgSetMembershipResponse) Reset()         { *m = MsgSetMembershipResponse{} }
func (m *MsgSetMembershipResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetMembershipResponse) ProtoMessage()    {}
func (*MsgSetMembershipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d582038e3db72, []int{13}
}
func (m *MsgSetMembershipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetMembershipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetMembershipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetMembershipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetMembershipResponse.Merge(m, src)
}
func (m *MsgSetMembershipResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetMembershipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetMembershipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetMembershipResponse proto.InternalMessageInfo

func (m *MsgSetMembershipResponse) GetExpiryAt() string {
	if m != nil {
		return m.ExpiryAt
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgInviteUser)(nil), "tessornetwork.fury.furykyc.MsgInviteUser")
	proto.RegisterType((*MsgInviteUserResponse)(nil), "tessornetwork.fury.furykyc.MsgInviteUserResponse")
	proto.RegisterType((*MsgBuyMembership)(nil), "tessornetwork.fury.furykyc.MsgBuyMembership")
	proto.RegisterType((*MsgBuyMembershipResponse)(nil), "tessornetwork.fury.furykyc.MsgBuyMembershipResponse")
	proto.RegisterType((*MsgDepositIntoLiquidityPool)(nil), "tessornetwork.fury.furykyc.MsgDepositIntoLiquidityPool")
	proto.RegisterType((*MsgDepositIntoLiquidityPoolResponse)(nil), "tessornetwork.fury.furykyc.MsgDepositIntoLiquidityPoolResponse")
	proto.RegisterType((*MsgAddTsp)(nil), "tessornetwork.fury.furykyc.MsgAddTsp")
	proto.RegisterType((*MsgAddTspResponse)(nil), "tessornetwork.fury.furykyc.MsgAddTspResponse")
	proto.RegisterType((*MsgRemoveTsp)(nil), "tessornetwork.fury.furykyc.MsgRemoveTsp")
	proto.RegisterType((*MsgRemoveTspResponse)(nil), "tessornetwork.fury.furykyc.MsgRemoveTspResponse")
	proto.RegisterType((*MsgRemoveMembership)(nil), "tessornetwork.fury.furykyc.MsgRemoveMembership")
	proto.RegisterType((*MsgRemoveMembershipResponse)(nil), "tessornetwork.fury.furykyc.MsgRemoveMembershipResponse")
	proto.RegisterType((*MsgSetMembership)(nil), "tessornetwork.fury.furykyc.MsgSetMembership")
	proto.RegisterType((*MsgSetMembershipResponse)(nil), "tessornetwork.fury.furykyc.MsgSetMembershipResponse")
}

func init() {
	proto.RegisterFile("tessornetwork/furykyc/tx.proto", fileDescriptor_893d582038e3db72)
}

var fileDescriptor_893d582038e3db72 = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xce, 0x36, 0x22, 0x6a, 0xa6, 0xb4, 0x14, 0x53, 0x90, 0x71, 0x91, 0x5b, 0x19, 0x15, 0x72,
	0xc1, 0xa6, 0xe5, 0x80, 0x90, 0xa8, 0xd4, 0xf4, 0x47, 0xa2, 0x02, 0x4b, 0x28, 0x6d, 0x2f, 0x70,
	0x88, 0x62, 0x67, 0xe5, 0xae, 0x52, 0x7b, 0x8d, 0x77, 0x9d, 0xd6, 0x2f, 0xc0, 0x15, 0x04, 0x47,
	0x2e, 0x1c, 0x38, 0xf1, 0x0c, 0x3c, 0x40, 0x8f, 0xbd, 0xc1, 0x09, 0x50, 0xfb, 0x22, 0xc8, 0x3f,
	0xd9, 0xc4, 0x29, 0x8d, 0xc0, 0xcd, 0x29, 0xf6, 0xb7, 0xf9, 0xbe, 0xf9, 0x76, 0x66, 0x76, 0xbc,
	0x70, 0xcf, 0xa6, 0xae, 0x8b, 0x03, 0x9b, 0x50, 0x0f, 0xf3, 0x43, 0x1a, 0x74, 0x0c, 0x01, 0x74,
	0x22, 0xdb, 0xe0, 0x47, 0xba, 0x1f, 0x50, 0x4e, 0x25, 0x7d, 0xf8, 0x7f, 0x23, 0x80, 0x4e, 0x64,
	0x2b, 0xfa, 0x68, 0x5d, 0x17, 0xbb, 0x16, 0x0e, 0xd8, 0x3e, 0xf1, 0x53, 0x7d, 0x45, 0xb5, 0x29,
	0x73, 0x29, 0x33, 0xac, 0x16, 0xc3, 0x46, 0x77, 0xd9, 0xc2, 0xbc, 0xb5, 0x6c, 0xd8, 0x94, 0x78,
	0xd9, 0xfa, 0x9c, 0x43, 0x1d, 0x9a, 0x3c, 0x1a, 0xf1, 0x53, 0x8a, 0x6a, 0x5b, 0x30, 0x6d, 0x32,
	0x67, 0xdb, 0xeb, 0x12, 0x8e, 0xf7, 0x18, 0x0e, 0xa4, 0x3b, 0x50, 0x0d, 0xb0, 0x4d, 0x7c, 0x82,
	0x3d, 0x2e, 0xa3, 0x45, 0x54, 0xab, 0x36, 0xfa, 0x80, 0x74, 0x0b, 0x2a, 0x0c, 0x7b, 0x6d, 0x1c,
	0xc8, 0x13, 0xc9, 0x52, 0xf6, 0xa6, 0x19, 0x70, 0x33, 0x27, 0xd3, 0xc0, 0xcc, 0xa7, 0x1e, 0xc3,
	0x09, 0x81, 0xb7, 0x78, 0xc8, 0x32, 0xad, 0xec, 0x4d, 0xb3, 0x61, 0xd6, 0x64, 0xce, 0x7a, 0x18,
	0x99, 0x62, 0x1f, 0xd2, 0x7d, 0xb8, 0xd6, 0xdf, 0x55, 0x93, 0x47, 0x3e, 0xce, 0x48, 0x33, 0x7d,
	0x78, 0x37, 0xf2, 0xb1, 0x34, 0x07, 0x57, 0xac, 0x30, 0x12, 0x26, 0xd2, 0x17, 0x69, 0x16, 0xca,
	0x9c, 0xf9, 0x72, 0x39, 0xc1, 0xe2, 0x47, 0xed, 0x31, 0xc8, 0xc3, 0x41, 0x84, 0xb1, 0x79, 0xa8,
	0xe2, 0x23, 0x9f, 0x04, 0x51, 0xb3, 0xd5, 0xdb, 0xe7, 0x64, 0x0a, 0xd4, 0xb9, 0xf6, 0x19, 0xc1,
	0xbc, 0xc9, 0x9c, 0x4d, 0xec, 0x53, 0x46, 0xf8, 0xb6, 0xc7, 0xe9, 0x0b, 0xf2, 0x26, 0x24, 0x6d,
	0xc2, 0xa3, 0x97, 0x94, 0x1e, 0xc4, 0x49, 0x6a, 0xa7, 0x6b, 0x34, 0xe8, 0x25, 0x49, 0x00, 0x92,
	0x0d, 0x95, 0x96, 0x4b, 0x43, 0x8f, 0xcb, 0x13, 0x8b, 0xe5, 0xda, 0xd4, 0xca, 0x6d, 0x3d, 0x2d,
	0x8d, 0x1e, 0x97, 0x46, 0xcf, 0x4a, 0xa3, 0x6f, 0x50, 0xe2, 0xad, 0x3f, 0x3c, 0xfe, 0xb9, 0x50,
	0xfa, 0xfa, 0x6b, 0xa1, 0xe6, 0x10, 0xbe, 0x1f, 0x5a, 0x71, 0xcd, 0x8d, 0xac, 0x8e, 0xe9, 0xcf,
	0x03, 0xd6, 0xee, 0x18, 0x71, 0x2a, 0x58, 0x42, 0x60, 0x8d, 0x4c, 0x5a, 0xfb, 0x88, 0xe0, 0xee,
	0x08, 0x8b, 0x62, 0x9f, 0x07, 0x30, 0x95, 0x32, 0x9a, 0x3e, 0xa5, 0x07, 0x32, 0x1a, 0xbf, 0x23,
	0x48, 0xf5, 0xe3, 0xa8, 0xda, 0x2a, 0x54, 0x4d, 0xe6, 0xd4, 0xdb, 0xed, 0x5d, 0xe6, 0xf7, 0x0a,
	0x82, 0x44, 0x41, 0x24, 0x15, 0xc0, 0xa1, 0x5d, 0x1c, 0x78, 0x2e, 0x4e, 0xb2, 0x13, 0x2f, 0x0c,
	0x20, 0xda, 0x12, 0x5c, 0x17, 0x74, 0xb1, 0x83, 0x73, 0x32, 0xda, 0x1a, 0x5c, 0x35, 0x99, 0xd3,
	0xc0, 0x2e, 0xed, 0xe2, 0x62, 0x81, 0x6a, 0x30, 0x37, 0xa8, 0x30, 0x22, 0xd6, 0x1e, 0xdc, 0x10,
	0xff, 0x1c, 0xe8, 0xd5, 0x7c, 0x00, 0x34, 0x1c, 0x20, 0x5e, 0x67, 0xa1, 0xc5, 0xec, 0x80, 0x58,
	0xa2, 0x4f, 0x07, 0x10, 0x6d, 0x35, 0x69, 0xb0, 0x61, 0x59, 0xe1, 0x23, 0x4f, 0x47, 0xe7, 0xe8,
	0x51, 0x72, 0x7c, 0x76, 0x30, 0x1f, 0x9f, 0x25, 0x69, 0x09, 0x66, 0x3c, 0x7c, 0xd8, 0xec, 0x9f,
	0xb5, 0xec, 0x28, 0x4d, 0x7b, 0xf8, 0xb0, 0x1f, 0x26, 0x3b, 0x54, 0xb9, 0xd0, 0xff, 0x74, 0xa8,
	0x56, 0xbe, 0x4f, 0x42, 0xd9, 0x64, 0x8e, 0xf4, 0x01, 0x01, 0x0c, 0x0c, 0x9c, 0xd5, 0xff, 0x1c,
	0x8c, 0x7a, 0x6e, 0xd0, 0x28, 0x5b, 0x97, 0xa2, 0x0b, 0xe7, 0x9f, 0x10, 0x4c, 0xe7, 0xa7, 0xd1,
	0x5a, 0x01, 0xe1, 0x9c, 0x82, 0xf2, 0xec, 0xb2, 0x0a, 0xc2, 0xdd, 0x17, 0x04, 0xb3, 0xe7, 0x5a,
	0x70, 0xa3, 0x80, 0xfc, 0xb0, 0x88, 0xf2, 0x7c, 0x0c, 0x22, 0xb9, 0x24, 0xe6, 0x7b, 0xb2, 0x48,
	0x12, 0x73, 0x0a, 0x85, 0x92, 0xf8, 0xf7, 0xe6, 0xfc, 0x86, 0x40, 0xbe, 0x70, 0xa2, 0x17, 0xc9,
	0xc3, 0x45, 0x62, 0xca, 0xce, 0x18, 0xc5, 0x84, 0xfd, 0xb7, 0x08, 0x2a, 0xd9, 0x60, 0x7d, 0x52,
	0x40, 0x3f, 0xa5, 0x2a, 0xf5, 0xc2, 0x54, 0x61, 0xe4, 0x1d, 0x82, 0x6a, 0x7f, 0xf6, 0x3e, 0x2d,
	0xdc, 0x40, 0xb1, 0x9d, 0xcd, 0xcb, 0xb0, 0x7b, 0x8e, 0xd6, 0x5f, 0x1f, 0x9f, 0xaa, 0xe8, 0xe4,
	0x54, 0x45, 0xbf, 0x4f, 0x55, 0xf4, 0xfe, 0x4c, 0x2d, 0x9d, 0x9c, 0xa9, 0xa5, 0x1f, 0x67, 0x6a,
	0xe9, 0x55, 0x3d, 0xf7, 0x15, 0xbb, 0xe8, 0x3e, 0xd5, 0x03, 0x8e, 0x86, 0xae, 0x6e, 0xf1, 0x47,
	0xce, 0xaa, 0x24, 0x17, 0xa5, 0x47, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x35, 0x5b, 0xec, 0x0d,
	0xe8, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	InviteUser(ctx context.Context, in *MsgInviteUser, opts ...grpc.CallOption) (*MsgInviteUserResponse, error)
	BuyMembership(ctx context.Context, in *MsgBuyMembership, opts ...grpc.CallOption) (*MsgBuyMembershipResponse, error)
	RemoveMembership(ctx context.Context, in *MsgRemoveMembership, opts ...grpc.CallOption) (*MsgRemoveMembershipResponse, error)
	SetMembership(ctx context.Context, in *MsgSetMembership, opts ...grpc.CallOption) (*MsgSetMembershipResponse, error)
	DepositIntoLiquidityPool(ctx context.Context, in *MsgDepositIntoLiquidityPool, opts ...grpc.CallOption) (*MsgDepositIntoLiquidityPoolResponse, error)
	AddTsp(ctx context.Context, in *MsgAddTsp, opts ...grpc.CallOption) (*MsgAddTspResponse, error)
	RemoveTsp(ctx context.Context, in *MsgRemoveTsp, opts ...grpc.CallOption) (*MsgRemoveTspResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) InviteUser(ctx context.Context, in *MsgInviteUser, opts ...grpc.CallOption) (*MsgInviteUserResponse, error) {
	out := new(MsgInviteUserResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/InviteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyMembership(ctx context.Context, in *MsgBuyMembership, opts ...grpc.CallOption) (*MsgBuyMembershipResponse, error) {
	out := new(MsgBuyMembershipResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/BuyMembership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveMembership(ctx context.Context, in *MsgRemoveMembership, opts ...grpc.CallOption) (*MsgRemoveMembershipResponse, error) {
	out := new(MsgRemoveMembershipResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/RemoveMembership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetMembership(ctx context.Context, in *MsgSetMembership, opts ...grpc.CallOption) (*MsgSetMembershipResponse, error) {
	out := new(MsgSetMembershipResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/SetMembership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DepositIntoLiquidityPool(ctx context.Context, in *MsgDepositIntoLiquidityPool, opts ...grpc.CallOption) (*MsgDepositIntoLiquidityPoolResponse, error) {
	out := new(MsgDepositIntoLiquidityPoolResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/DepositIntoLiquidityPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddTsp(ctx context.Context, in *MsgAddTsp, opts ...grpc.CallOption) (*MsgAddTspResponse, error) {
	out := new(MsgAddTspResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/AddTsp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveTsp(ctx context.Context, in *MsgRemoveTsp, opts ...grpc.CallOption) (*MsgRemoveTspResponse, error) {
	out := new(MsgRemoveTspResponse)
	err := c.cc.Invoke(ctx, "/tessornetwork.fury.furykyc.Msg/RemoveTsp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	InviteUser(context.Context, *MsgInviteUser) (*MsgInviteUserResponse, error)
	BuyMembership(context.Context, *MsgBuyMembership) (*MsgBuyMembershipResponse, error)
	RemoveMembership(context.Context, *MsgRemoveMembership) (*MsgRemoveMembershipResponse, error)
	SetMembership(context.Context, *MsgSetMembership) (*MsgSetMembershipResponse, error)
	DepositIntoLiquidityPool(context.Context, *MsgDepositIntoLiquidityPool) (*MsgDepositIntoLiquidityPoolResponse, error)
	AddTsp(context.Context, *MsgAddTsp) (*MsgAddTspResponse, error)
	RemoveTsp(context.Context, *MsgRemoveTsp) (*MsgRemoveTspResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) InviteUser(ctx context.Context, req *MsgInviteUser) (*MsgInviteUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteUser not implemented")
}
func (*UnimplementedMsgServer) BuyMembership(ctx context.Context, req *MsgBuyMembership) (*MsgBuyMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyMembership not implemented")
}
func (*UnimplementedMsgServer) RemoveMembership(ctx context.Context, req *MsgRemoveMembership) (*MsgRemoveMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMembership not implemented")
}
func (*UnimplementedMsgServer) SetMembership(ctx context.Context, req *MsgSetMembership) (*MsgSetMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMembership not implemented")
}
func (*UnimplementedMsgServer) DepositIntoLiquidityPool(ctx context.Context, req *MsgDepositIntoLiquidityPool) (*MsgDepositIntoLiquidityPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DepositIntoLiquidityPool not implemented")
}
func (*UnimplementedMsgServer) AddTsp(ctx context.Context, req *MsgAddTsp) (*MsgAddTspResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTsp not implemented")
}
func (*UnimplementedMsgServer) RemoveTsp(ctx context.Context, req *MsgRemoveTsp) (*MsgRemoveTspResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTsp not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_InviteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInviteUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InviteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/InviteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InviteUser(ctx, req.(*MsgInviteUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyMembership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyMembership)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyMembership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/BuyMembership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyMembership(ctx, req.(*MsgBuyMembership))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveMembership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveMembership)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveMembership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/RemoveMembership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveMembership(ctx, req.(*MsgRemoveMembership))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetMembership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetMembership)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetMembership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/SetMembership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetMembership(ctx, req.(*MsgSetMembership))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DepositIntoLiquidityPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDepositIntoLiquidityPool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DepositIntoLiquidityPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/DepositIntoLiquidityPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DepositIntoLiquidityPool(ctx, req.(*MsgDepositIntoLiquidityPool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddTsp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddTsp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddTsp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/AddTsp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddTsp(ctx, req.(*MsgAddTsp))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveTsp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveTsp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveTsp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tessornetwork.fury.furykyc.Msg/RemoveTsp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveTsp(ctx, req.(*MsgRemoveTsp))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tessornetwork.fury.furykyc.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InviteUser",
			Handler:    _Msg_InviteUser_Handler,
		},
		{
			MethodName: "BuyMembership",
			Handler:    _Msg_BuyMembership_Handler,
		},
		{
			MethodName: "RemoveMembership",
			Handler:    _Msg_RemoveMembership_Handler,
		},
		{
			MethodName: "SetMembership",
			Handler:    _Msg_SetMembership_Handler,
		},
		{
			MethodName: "DepositIntoLiquidityPool",
			Handler:    _Msg_DepositIntoLiquidityPool_Handler,
		},
		{
			MethodName: "AddTsp",
			Handler:    _Msg_AddTsp_Handler,
		},
		{
			MethodName: "RemoveTsp",
			Handler:    _Msg_RemoveTsp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tessornetwork/furykyc/tx.proto",
}

func (m *MsgInviteUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInviteUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInviteUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInviteUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInviteUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInviteUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyMembership) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyMembership) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyMembership) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tsp) > 0 {
		i -= len(m.Tsp)
		copy(dAtA[i:], m.Tsp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tsp)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Buyer) > 0 {
		i -= len(m.Buyer)
		copy(dAtA[i:], m.Buyer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Buyer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MembershipType) > 0 {
		i -= len(m.MembershipType)
		copy(dAtA[i:], m.MembershipType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MembershipType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyMembershipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyMembershipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyMembershipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExpiryAt) > 0 {
		i -= len(m.ExpiryAt)
		copy(dAtA[i:], m.ExpiryAt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExpiryAt)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDepositIntoLiquidityPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDepositIntoLiquidityPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDepositIntoLiquidityPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDepositIntoLiquidityPoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDepositIntoLiquidityPoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDepositIntoLiquidityPoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AmountPool) > 0 {
		for iNdEx := len(m.AmountPool) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AmountPool[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddTsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddTsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddTsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Government) > 0 {
		i -= len(m.Government)
		copy(dAtA[i:], m.Government)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Government)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Tsp) > 0 {
		i -= len(m.Tsp)
		copy(dAtA[i:], m.Tsp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tsp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddTspResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddTspResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddTspResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tsp) > 0 {
		i -= len(m.Tsp)
		copy(dAtA[i:], m.Tsp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tsp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Government) > 0 {
		i -= len(m.Government)
		copy(dAtA[i:], m.Government)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Government)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Tsp) > 0 {
		i -= len(m.Tsp)
		copy(dAtA[i:], m.Tsp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tsp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTspResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTspResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTspResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tsp) > 0 {
		i -= len(m.Tsp)
		copy(dAtA[i:], m.Tsp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tsp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMembership) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMembership) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMembership) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Subscriber) > 0 {
		i -= len(m.Subscriber)
		copy(dAtA[i:], m.Subscriber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Subscriber)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Government) > 0 {
		i -= len(m.Government)
		copy(dAtA[i:], m.Government)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Government)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMembershipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMembershipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMembershipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Subscriber) > 0 {
		i -= len(m.Subscriber)
		copy(dAtA[i:], m.Subscriber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Subscriber)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetMembership) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetMembership) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetMembership) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewMembership) > 0 {
		i -= len(m.NewMembership)
		copy(dAtA[i:], m.NewMembership)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewMembership)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Subscriber) > 0 {
		i -= len(m.Subscriber)
		copy(dAtA[i:], m.Subscriber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Subscriber)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Government) > 0 {
		i -= len(m.Government)
		copy(dAtA[i:], m.Government)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Government)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetMembershipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetMembershipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetMembershipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExpiryAt) > 0 {
		i -= len(m.ExpiryAt)
		copy(dAtA[i:], m.ExpiryAt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExpiryAt)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgInviteUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInviteUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBuyMembership) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MembershipType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Buyer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Tsp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBuyMembershipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ExpiryAt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDepositIntoLiquidityPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgDepositIntoLiquidityPoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AmountPool) > 0 {
		for _, e := range m.AmountPool {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddTsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Government)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddTspResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveTsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Government)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveTspResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveMembership) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Government)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Subscriber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveMembershipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Subscriber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetMembership) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Government)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Subscriber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewMembership)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetMembershipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ExpiryAt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgInviteUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInviteUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInviteUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInviteUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInviteUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInviteUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyMembership) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyMembership: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyMembership: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MembershipType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MembershipType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buyer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buyer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyMembershipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyMembershipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyMembershipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpiryAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDepositIntoLiquidityPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDepositIntoLiquidityPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDepositIntoLiquidityPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDepositIntoLiquidityPoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDepositIntoLiquidityPoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDepositIntoLiquidityPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountPool", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmountPool = append(m.AmountPool, types.Coin{})
			if err := m.AmountPool[len(m.AmountPool)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddTsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddTsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddTsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Government", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Government = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddTspResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddTspResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddTspResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Government", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Government = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTspResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTspResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTspResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMembership) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMembership: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMembership: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Government", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Government = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscriber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subscriber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMembershipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMembershipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMembershipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscriber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subscriber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetMembership) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetMembership: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetMembership: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Government", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Government = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscriber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subscriber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewMembership", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewMembership = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetMembershipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetMembershipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetMembershipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpiryAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
