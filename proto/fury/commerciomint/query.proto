syntax = "proto3";
package tessornetwork.fury.furymint;

// Options section
option go_package = "github.com/tessornetwork/fury/x/furymint/types";

// Import section
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "tessornetwork/furymint/position.proto";
import "tessornetwork/furymint/params.proto";

// Query defines the gRPC querier service.
service Query {
  // Queries a Etp by id.
  rpc Etp(QueryEtpRequest) returns (QueryEtpResponse) {
    option (google.api.http).get = "/tessornetwork/furymint/{ID}/etp";
  }

  rpc EtpsByOwner(QueryEtpsByOwnerRequest) returns (QueryEtpsResponse) {
    option (google.api.http).get =
        "/tessornetwork/furymint/{Owner}/etpsOwner";
  }

  rpc Etps(QueryEtpsRequest) returns (QueryEtpsResponse) {
    option (google.api.http).get = "/tessornetwork/furymint/etps";
  }

  rpc Params(QueryParams) returns (QueryParamsResponse) {
    option (google.api.http).get = "/tessornetwork/furymint/params";
  }

}

message QueryEtpRequest { string ID = 1; }

message QueryEtpsByOwnerRequest {
  string Owner = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryEtpResponse { furymint.Position Position = 1; }

message QueryEtpsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryEtpsResponse {
  repeated furymint.Position Positions = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryParams {}

message QueryParamsResponse { Params params = 1; }

