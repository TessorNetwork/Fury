syntax = "proto3";
package tessornetwork.fury.furykyc;

// Options section
option go_package = "github.com/tessornetwork/fury/x/furykyc/types";

// Import section
import "tessornetwork/furykyc/membership.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

// Msg defines the Msg service.
service Msg {
    rpc InviteUser(MsgInviteUser) returns (MsgInviteUserResponse);
    rpc BuyMembership(MsgBuyMembership) returns (MsgBuyMembershipResponse);
    rpc RemoveMembership(MsgRemoveMembership) returns (MsgRemoveMembershipResponse);
    rpc SetMembership(MsgSetMembership) returns (MsgSetMembershipResponse);
    
    rpc DepositIntoLiquidityPool(MsgDepositIntoLiquidityPool) returns (MsgDepositIntoLiquidityPoolResponse);
    rpc AddTsp(MsgAddTsp) returns (MsgAddTspResponse);
    rpc RemoveTsp(MsgRemoveTsp) returns (MsgRemoveTspResponse);
}

message MsgInviteUser {
  string recipient = 1;
  string sender = 2;
}
message MsgInviteUserResponse {
  string status = 1;
}

// ==========================================
message MsgBuyMembership {
  string membership_type = 1;
  string buyer = 2;
  string tsp = 3;
}
message MsgBuyMembershipResponse {
  string expiry_at = 1;
}

// ==========================================
message MsgDepositIntoLiquidityPool {
  string depositor = 1;
  repeated cosmos.base.v1beta1.Coin amount = 2
    [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message MsgDepositIntoLiquidityPoolResponse {
  repeated cosmos.base.v1beta1.Coin amount_pool = 1
    [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// ==========================================
message MsgAddTsp {
  string tsp = 1;
  string government = 2;
}
message MsgAddTspResponse {
  string tsp = 1;
}

// ==========================================
message MsgRemoveTsp {
  string tsp = 1;
  string government = 2;
}
message MsgRemoveTspResponse {
  string tsp = 1;
}

// ==========================================
message MsgRemoveMembership {
  string government = 1;
  string subscriber = 2;
}
message MsgRemoveMembershipResponse {
  string subscriber = 1;
}

// ==========================================
message MsgSetMembership {
  string government = 1;
  string subscriber = 2;
  string new_membership = 3;
}
message MsgSetMembershipResponse {
  string expiry_at = 1;
}
