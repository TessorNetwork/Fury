syntax = "proto3";
package tessornetwork.fury.documents;

// Options section
option go_package = "github.com/tessornetwork/fury/x/documents/types";

// Import section
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fury/documents/document.proto";
import "fury/documents/documentReceipt.proto";

/*
rpc DocumentAll(QueryAllDocumentRequest) returns (QueryAllDocumentResponse) {
        option (google.api.http).get = "/fury/documents/document";
}*/
// Query defines the gRPC querier service.
service Query {
  // Queries a Document by id.
  rpc Document(QueryGetDocumentRequest) returns (QueryGetDocumentResponse) {
    option (google.api.http).get =
        "/fury/documents/document/{UUID}";
  }
  // Queries a list of sent Document items.
  rpc SentDocuments(QueryGetSentDocumentsRequest)
      returns (QueryGetSentDocumentsResponse) {
    option (google.api.http).get =
        "/fury/documents/document/{address}/sent";
  }

  // Queries a list of received Document items.
  rpc ReceivedDocument(QueryGetReceivedDocumentRequest)
      returns (QueryGetReceivedDocumentResponse) {
    option (google.api.http).get =
        "/fury/documents/document/{address}/received";
  }

  rpc SentDocumentsReceipts(QueryGetSentDocumentsReceiptsRequest)
      returns (QueryGetSentDocumentsReceiptsResponse) {
    option (google.api.http).get =
        "/fury/documents/receipts/{address}/sent";
  }

  // Queries a list of Document items.
  rpc ReceivedDocumentsReceipts(QueryGetReceivedDocumentsReceiptsRequest)
      returns (QueryGetReceivedDocumentsReceiptsResponse) {
    option (google.api.http).get =
        "/fury/documents/receipts/{address}/received";
  }

  rpc DocumentsReceipts(QueryGetDocumentsReceiptsRequest)
      returns (QueryGetDocumentsReceiptsResponse) {
    option (google.api.http).get =
        "/fury/documents/document/{UUID}/receipts";
  }
}

message QueryGetDocumentRequest { string UUID = 1; }

message QueryGetDocumentResponse { Document Document = 1; }
/*
message QueryAllDocumentRequest {
        cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDocumentResponse {
        repeated Document Document = 1;
        cosmos.base.query.v1beta1.PageResponse pagination = 2;
}*/

// ----------------------------------
// --- Documents
// ----------------------------------

message QueryGetSentDocumentsRequest {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetSentDocumentsResponse {
  repeated Document Document = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetReceivedDocumentRequest {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetReceivedDocumentResponse {
  repeated Document ReceivedDocument = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ----------------------------------
// --- Document receipts
// ----------------------------------

message QueryGetSentDocumentsReceiptsRequest {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetSentDocumentsReceiptsResponse {
  repeated DocumentReceipt receipt = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetReceivedDocumentsReceiptsRequest {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetReceivedDocumentsReceiptsResponse {
  repeated DocumentReceipt ReceiptReceived = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDocumentsReceiptsRequest {
  string UUID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetDocumentsReceiptsResponse {
  repeated DocumentReceipt Receipts = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}